SPELLING SUGGESTIONS
===========================

A solution for the problem described here: http://puzzlenode.com/puzzles/4

Files in the bundle
-------------------
spelling.rb - Main module including the core code for the program
main.rb - This program reads the problem data from a file called 'input', calculates the results and write them in a file called 'output'
spelling_test.rb - Tests for the Spelling module

USAGE
=====

Resolving the problem
---------------------

You need to provide a file named 'input', with valid input data for the spelling suggestions problem. It should be placed in the folder where the provided source files are located.
Run 'ruby main.rb', it will produce a file named 'output' with the results.

Running the tests
-----------------

You can run the test suite by running 'ruby spelling_test.rb'. 
The tests were implemented with MiniTest, so you might have to install this gem: gem install minitest

Notes
-----

Running the problem with the original input data file from the Puzzle Node page, could take several minutes to complete the algorithm.
It would take around 15-20 minutes to complete all the suggestions listed in this input file.

The provided implementation is not the most optimal program in terms of speed. In fact, the original script which resolved successfully the problem in PuzzleNode was 5 times faster. However, I have refactored the former program for the sake of clarity and cleanness of the source code, organizing all in classes, modules and separated files, which affected the performance of the program.
Anyway, the current implementation should work well, consuming decent times for most of the possible spelling suggestions based in actual words from the English dictionary.

Tested on:
--------- 

ruby 1.8.7 (2010-01-10 patchlevel 249) [i486-linux]
ruby 1.9.2p188 (2011-03-28 revision 31204) [i686-linux]
The considerations about performance explained above have observed under ruby 1.8.7 

-----------------------------

Developed by Jorge Bejar, 2011
twitter: jmbejar
github: jmbejar

